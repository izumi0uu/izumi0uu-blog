---
import Base from '@/layouts/Base.astro';
import ThemeControls from '@/components/react/dev/ThemeDevToolbar';

const metadata = {
  title: '主题控制测试页面',
  description: '用于测试独立主题控制组件的页面',
};

const currentLocale = Astro.currentLocale || 'en';
---

<Base {metadata}>
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-4xl mx-auto">
      <h1 class="text-headings text-4xl font-bold mb-8">
        🎨 主题控制测试页面
      </h1>
      
      <div class="bg-surface-container rounded-lg p-6 mb-8">
        <h2 class="text-headings text-2xl font-semibold mb-4">页面信息</h2>
        <div class="text-content space-y-2">
          <p><strong>当前语言:</strong> {currentLocale}</p>
          <p><strong>页面路径:</strong> {Astro.url.pathname}</p>
          <p><strong>测试目的:</strong> 验证独立的 ThemeControls 组件功能</p>
        </div>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- 基本使用 -->
        <div class="bg-surface-container rounded-lg p-6">
          <h3 class="text-headings text-xl font-semibold mb-4">基本使用</h3>
          <p class="text-content mb-4 text-sm">
            默认配置的主题控制组件，显示标题和完整布局。
          </p>
          <ThemeControls client:load />
        </div>

        <!-- 紧凑模式 -->
        <div class="bg-surface-container rounded-lg p-6">
          <h3 class="text-headings text-xl font-semibold mb-4">紧凑模式</h3>
          <p class="text-content mb-4 text-sm">
            紧凑布局，不显示标题，适合空间有限的场景。
          </p>
          <ThemeControls client:load compact={true} showTitle={false} />
        </div>

        <!-- 自定义样式 -->
        <div class="bg-surface-container rounded-lg p-6">
          <h3 class="text-headings text-xl font-semibold mb-4">自定义样式</h3>
          <p class="text-content mb-4 text-sm">
            添加自定义 CSS 类名，可以进一步定制外观。
          </p>
          <ThemeControls 
            client:load 
            className="border-2 border-primary/20 bg-primary/5" 
          />
        </div>

        <!-- 仅显示切换按钮 -->
        <div class="bg-surface-container rounded-lg p-6">
          <h3 class="text-headings text-xl font-semibold mb-4">最小化显示</h3>
          <p class="text-content mb-4 text-sm">
            最小化的显示方式，仅保留核心功能。
          </p>
          <ThemeControls 
            client:load 
            compact={true} 
            showTitle={false}
            className="bg-surface-container-high"
          />
        </div>
      </div>

      <div class="bg-surface-container rounded-lg p-6 mt-8">
        <h2 class="text-headings text-2xl font-semibold mb-4">测试内容</h2>
        <div class="space-y-4">
          <div class="bg-surface-container-high rounded-md p-4">
            <h4 class="text-headings font-medium mb-2">颜色测试</h4>
            <div class="grid grid-cols-2 md:grid-cols-4 gap-2 text-sm">
              <div class="bg-primary text-on-primary p-2 rounded text-center">Primary</div>
              <div class="bg-secondary text-on-secondary p-2 rounded text-center">Secondary</div>
              <div class="bg-tertiary text-on-tertiary p-2 rounded text-center">Tertiary</div>
              <div class="bg-error text-on-error p-2 rounded text-center">Error</div>
            </div>
          </div>

          <div class="bg-surface-container-high rounded-md p-4">
            <h4 class="text-headings font-medium mb-2">文本样式测试</h4>
            <div class="space-y-2">
              <p class="text-headings text-lg font-bold">标题文本 (text-headings)</p>
              <p class="text-content">正文内容 (text-content)</p>
              <p class="text-content/70">次要文本 (text-content/70)</p>
              <p class="text-primary">主色文本 (text-primary)</p>
            </div>
          </div>

          <div class="bg-surface-container-high rounded-md p-4">
            <h4 class="text-headings font-medium mb-2">交互元素测试</h4>
            <div class="space-x-2">
              <button class="bg-primary text-on-primary px-4 py-2 rounded hover:opacity-90">
                主要按钮
              </button>
              <button class="bg-secondary text-on-secondary px-4 py-2 rounded hover:opacity-90">
                次要按钮
              </button>
              <button class="border border-outline text-content px-4 py-2 rounded hover:bg-surface-container-high">
                边框按钮
              </button>
            </div>
          </div>
        </div>
      </div>

      <div class="bg-surface-container rounded-lg p-6 mt-8">
        <h2 class="text-headings text-2xl font-semibold mb-4">使用说明</h2>
        <div class="text-content space-y-3 text-sm">
          <p>
            <strong>ThemeControls 组件特性:</strong>
          </p>
          <ul class="list-disc list-inside space-y-1 ml-4">
            <li><strong>实时响应:</strong> 组件会自动检测和响应主题变化</li>
            <li><strong>双主题支持:</strong> 支持默认主题和酒红主题</li>
            <li><strong>模式切换:</strong> 每个主题都支持亮色和暗色模式</li>
            <li><strong>灵活配置:</strong> 通过 props 控制显示方式和样式</li>
            <li><strong>独立使用:</strong> 可以在任何页面或组件中独立使用</li>
          </ul>
          
          <p>
            <strong>测试步骤:</strong>
          </p>
          <ol class="list-decimal list-inside space-y-1 ml-4">
            <li>点击不同的主题控制组件，观察它们的同步变化</li>
            <li>切换主题，观察页面颜色和样式的变化</li>
            <li>切换模式（亮色/暗色），测试视觉效果</li>
            <li>检查所有组件是否保持同步状态</li>
          </ol>

          <p class="text-primary">
            💡 <strong>提示:</strong> 这个组件已经从 StagewiseDevToolbar 中成功抽离，
            现在可以在项目的任何地方独立使用。
          </p>
        </div>
      </div>
    </div>
  </main>
</Base> 