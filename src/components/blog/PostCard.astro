---
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";

import { getPublishedOrUpdatedDate } from "@/modules/common";
import { getCategoryProps } from "@/modules/post/category";
import Link from "@/components/Link.astro";
// import TagList from "@/components/TagList.astro";
import { DRAFT_TEXT } from "@/constants/data";
import { IMAGE_SIZES } from "@/constants/image";
import { ROUTES } from "@/constants/routes";
import { setTransitionSlug, TRANSITION_ELEMENT_IDS } from "@/constants/transitions";
import { formatDate, formatDateIso } from "@/utils/data/datetime";
import { cn } from "@/utils/ui/styles";

import { BlogAvatar } from "@/components/react/ui/BlogAvatar";
import { Card3d } from "@/components/react/ui/Card3d";
import avatar from "@/assets/images/avatar.jpg";

import type { Post } from "@/types/post";

export interface Props {
  post: Post;
  cardSize?: "sm" | "md" | "lg";
}

const { post, cardSize = "lg" } = Astro.props;
const { data, slug, readingTime } = post;

const {
  draft,
  publishDate,
  updatedDate,
  title,
  heroImage,
  heroAlt,
  noHero,
  category,
  tags = [],
  description,
} = data;

const { icon: categoryIcon } = getCategoryProps(category);
const { lastAccessDate, isUpdatedDate } = getPublishedOrUpdatedDate({
  publishDate,
  updatedDate,
});

const getTransitionNameFromElementId = setTransitionSlug({ pageSlug: slug });

// 格式化文章信息为Card3d文本
const articleHeading = title + (draft ? ` (${DRAFT_TEXT})` : "");
const articleDescription = description || "点击查看文章详情";

// 根据卡片尺寸设置高度
const cardHeight = {
  sm: 150,
  md: 180,
  lg: 220,
}[cardSize];

// 根据卡片尺寸调整头像大小
const avatarSize = {
  sm: "sm",
  md: "sm",
  lg: "md",
} as const;
---

<div
  class={cn(
    "w-full",
    "not-first:pt-4 not-last:pb-4 md:not-first:pt-6 md:not-last:pb-6",
    "not-last:border-b border-base-300"
  )}
>
  <div class="flex items-start justify-between mb-3 text-sm">
    {/* 分类和日期信息 */}
    <Link
      href={`${ROUTES.CATEGORIES}${category}`}
      class="inline-flex items-center gap-1.5 bg-primary-base-200 font-medium px-2 py-0.5 rounded-button"
    >
      <Icon name={categoryIcon} class="w-4 h-4" />
      <span class="pb-0.5 hidden xs:inline-block">{category}</span>
    </Link>

    <span class="inline-flex items-center gap-1.5 text-captions">
      <Icon name={isUpdatedDate ? "mdi:edit-outline" : "mdi:access-time"} class="w-4 h-4" />
      <time datetime={formatDateIso(lastAccessDate)} class="hidden xs:inline-block"
        >{formatDate(lastAccessDate)}</time
      >
    </span>
  </div>

  {/* 3D卡片代替整个文章 */}
  <div class="w-full">
    <div class="relative">
      <Card3d
        heading={articleHeading}
        text={articleDescription}
        client:visible
        href={`${ROUTES.BLOG}${slug}`}
        className="w-full"
        width={1000}
        height={cardHeight}
        scale={1.2}
        responsive={true}
      />

      {/* 头像定位在右下角 */}
      <div class="absolute -bottom-4 -right-4 z-10">
        <BlogAvatar avatarSrc={avatar.src} size={avatarSize[cardSize]} client:idle />
      </div>

      {/* 阅读时间定位在左下角 */}
      <div
        class="absolute bottom-4 left-4 z-5 inline-flex items-center gap-2 text-sm text-captions"
        slot="reading-time"
      >
        <Icon name="mdi:book-open-blank-variant-outline" class="w-4 h-4" />
        <span class="text-nowrap">{`${Math.round(readingTime)} minutes`}</span>
      </div>
    </div>
  </div>
</div>
