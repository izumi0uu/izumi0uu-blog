---
/**
 * Simplified i18n script - only handles session management to prevent duplicate redirects
 * All language detection and redirection logic is handled by ParaglideJS
 */
import { SUPPORTED_LOCALES, DEFAULT_LOCALE, BROWSER_LANG_REDIRECT_DONE_KEY } from "../config/i18n";
---
<script type="module" define:vars={{ 
  supportedLocales: SUPPORTED_LOCALES, 
  defaultLocale: DEFAULT_LOCALE,
  sessionStorageKey: BROWSER_LANG_REDIRECT_DONE_KEY
}}>
  console.log("I18nScript.astro: Session management executing...");

  const baseLocale = defaultLocale;
  const locales = supportedLocales;

  /**
   * Check if redirect has been attempted in current session
   * @returns {boolean} true if redirect was already attempted
   */
  const hasRedirectBeenAttemptedThisSession = () => {
    try {
      return !!sessionStorage.getItem(sessionStorageKey);
    } catch (e) {
      console.warn("i18nScript: Could not access sessionStorage:", e);
      return false;
    }
  };

  /**
   * Mark redirect as attempted in current session
   */
  const markRedirectAsAttemptedThisSession = () => {
    try {
      sessionStorage.setItem(sessionStorageKey, "true");
    } catch (e) {
      console.warn("i18nScript: Could not set sessionStorage item:", e);
    }
  };

  /**
   * Initialize session management for i18n redirects
   * Prevents duplicate redirects within the same browser session
   */
  const initializeSessionManagement = () => {
    // Prevent duplicate redirect check
    if (hasRedirectBeenAttemptedThisSession()) {
      console.log("i18nScript: Session already attempted redirect, skipping.");
      return;
    }

    // Mark session to prevent future redirects in this session
    markRedirectAsAttemptedThisSession();
    
    console.log("i18nScript: Session management initialized. ParaglideJS will handle language detection.");
  };

  // Execute session management initialization
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initializeSessionManagement);
  } else {
    initializeSessionManagement();
  }
</script>